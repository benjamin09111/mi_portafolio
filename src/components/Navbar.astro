---
import { Mail, Instagram, Youtube, Linkedin, Github, Menu, X } from 'lucide-astro';

const pathname = Astro.url.pathname;
const lang = pathname.startsWith('/en') ? 'en' : pathname.startsWith('/de') ? 'de' : 'es';

const navTexts = {
  es: { proyectos: 'Proyectos', experiencia: 'Experiencia', habilidades: 'Habilidades', sobre: 'Sobre', descargarCV: 'Descargar CV', downloadFile: 'Mi_CV.pdf' },
  en: { proyectos: 'Projects', experiencia: 'Experience', habilidades: 'Skills', sobre: 'About', descargarCV: 'Download CV', downloadFile: 'My_CV.pdf' },
  de: { proyectos: 'Projekte', experiencia: 'Erfahrung', habilidades: 'Fähigkeiten', sobre: 'Über', descargarCV: 'Lebenslauf herunterladen', downloadFile: 'Mein_CV.pdf' }
}[lang];

const langOptions = [
  { code: 'es', label: 'Español', flag: '🇪🇸', path: '/' },
  { code: 'en', label: 'English', flag: '🇬🇧', path: '/en' },
  { code: 'de', label: 'Deutsch', flag: '🇩🇪', path: '/de' }
];
---

<nav class="py-6 px-4 lg:py-12 xl:px-24 2xl:px-64 flex justify-between items-center text-base">
  <div class="text-xl md:text-2xl font-semibold flex gap-2 items-center">
    <img src="/icons/astro.svg" alt="ASTRO_ICON" class="w-12 h-12" />
    <a href="#home">BENJAMÍN MORALES</a>
  </div>

  <div class="relative">
  <button id="lang-toggle" class="flex items-center gap-1 px-2 py-1 border rounded hover:bg-gray-100">
    🌐 {lang.toUpperCase()}
    <svg class="w-4 h-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.293l3.71-4.06a.75.75 0 111.1 1.02l-4.25 4.65a.75.75 0 01-1.1 0l-4.25-4.65a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
    </svg>
  </button>
  <div id="lang-menu" class="absolute right-0 mt-1 w-40 bg-white border rounded shadow-lg hidden z-50">
    {langOptions.map(({ code, label, flag, path }) => (
      <a
        href={path}
        class={`block px-4 py-2 text-sm hover:bg-gray-100 ${code === lang ? 'font-bold' : ''}`}
      >
        {flag} {label}
      </a>
    ))}
  </div>
</div>

  <div class="hidden lg:flex items-center gap-4">
    <a href="#projects" class="hover:underline">{navTexts.proyectos}</a>
    <a href="#experience" class="hover:underline">{navTexts.experiencia}</a>
    <a href="#skills" class="hover:underline">{navTexts.habilidades}</a>
    <a href="#about" class="hover:underline">{navTexts.sobre}</a>
  </div>

  <div class="hidden lg:flex items-center gap-3">
    <a href="mailto:benjamin.morales3@mail.udp.cl" class="text-gray-700 hover:text-black transition">
      <Mail size={28} />
    </a>
    <a href="https://github.com/benjamin09111" target="_blank" class="text-gray-700 hover:text-black transition">
      <Github size={28} />
    </a>
    <a href="https://www.youtube.com/@tutoprogra1513" target="_blank" class="text-gray-700 hover:text-black transition">
      <Youtube size={28} />
    </a>
    <a href="https://www.linkedin.com/in/benjamin-morales-pizarro-a63696244/" target="_blank" class="text-gray-700 hover:text-black transition">
      <Linkedin size={28} />
    </a>
    <a href="https://www.instagram.com/benjamin.bmin/" target="_blank" class="text-gray-700 hover:text-black transition">
      <Instagram size={28} />
    </a>
    <a href="/files/CV.pdf" download={navTexts.downloadFile} class="px-2 py-1 rounded hover:cursor-pointer bg-black text-white hover:bg-black/80">{navTexts.descargarCV}</a>
  </div>

  <!-- Botón menú hamburguesa (solo en móviles) -->
  <button id="menu-button" class="lg:hidden text-gray-700">
    <Menu size={28} />
  </button>
</nav>

<!-- Menú desplegable en móviles -->
<div id="mobile-menu" class="z-[1000] fixed top-0 left-0 w-full h-screen bg-gray-50 flex flex-col items-center justify-center transform -translate-x-full transition-transform duration-300 lg:hidden">
  <button id="close-button" class="absolute top-5 right-5 text-gray-700">
    <X size={28} />
  </button>

  <a href="#projects" class="text-xl py-2 hover:underline">{navTexts.proyectos}</a>
  <a href="#experience" class="text-xl py-2 hover:underline">{navTexts.experiencia}</a>
  <a href="#skills" class="text-xl py-2 hover:underline">{navTexts.habilidades}</a>
  <a href="#about" class="text-xl py-2 hover:underline">{navTexts.sobre}</a>

  <div class="mt-6 flex gap-4">
    <a href="mailto:benjamin.morales3@mail.udp.cl" class="text-gray-700 hover:text-black transition">
      <Mail size={28} />
    </a>
    <a href="https://github.com/benjamin09111" target="_blank" class="text-gray-700 hover:text-black transition">
      <Github size={28} />
    </a>
    <a href="https://www.youtube.com/@tutoprogra1513" target="_blank" class="text-gray-700 hover:text-black transition">
      <Youtube size={28} />
    </a>
    <a href="https://www.linkedin.com/in/benjamin-morales-pizarro-a63696244/" target="_blank" class="text-gray-700 hover:text-black transition">
      <Linkedin size={28} />
    </a>
    <a href="https://www.instagram.com/benjamin.bmin/" target="_blank" class="text-gray-700 hover:text-black transition">
      <Instagram size={28} />
    </a>
  </div>

  <a href="/files/CV.pdf" download={navTexts.downloadFile} class="mt-4 px-4 py-2 rounded bg-black text-white hover:bg-black/80">
    {navTexts.descargarCV}
  </a>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuButton = document.getElementById('menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeButton = document.getElementById('close-button');

    // Verificar que los elementos existen antes de agregar event listeners
    if (menuButton && mobileMenu && closeButton) {
      // Función para abrir y cerrar el menú
      const toggleMenu = () => {
        mobileMenu.classList.toggle('-translate-x-full');
      };

      // Event listeners
      menuButton.addEventListener('click', toggleMenu);
      closeButton.addEventListener('click', toggleMenu);

      // Cerrar el menú al hacer clic en un enlace
      const links = document.querySelectorAll('#mobile-menu a');
      links.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('-translate-x-full');
        });
      });
    }
  });

    const langToggle = document.getElementById('lang-toggle');
    const langMenu = document.getElementById('lang-menu');

    if (langToggle && langMenu) {
      langToggle.addEventListener('click', () => {
        langMenu.classList.toggle('hidden');
      });

      document.addEventListener('click', (e) => {
  const target = e.target as Node; // 👈 cast seguro
  if (!langToggle.contains(target) && !langMenu.contains(target)) {
    langMenu.classList.add('hidden');
  }
});
    }

    

</script>
