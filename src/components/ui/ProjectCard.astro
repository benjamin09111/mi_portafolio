---
import { Github, Youtube, Eye } from 'lucide-astro';

const { title, subtitle, description, image, repo, youtube, link, tags, lang } = Astro.props;

// Definimos un tipo que solo permite estos strings
type LangType = 'es' | 'en' | 'de';

// Forzamos que lang sea ese tipo
const language = lang as LangType;

const labels: Record<LangType, { tech: string; links: string }> = {
  es: { tech: "Tecnolog√≠as", links: "Links" },
  en: { tech: "Technologies", links: "Links" },
  de: { tech: "Technologien", links: "Links" }
};
---

<div class="w-full max-w-[350px] rounded-lg overflow-hidden shadow-lg lg:shadow-2xl bg-white">
  <img src={`/${image}`} alt={title} class="w-full h-[180px] object-cover" />

  <div class="p-4">
    <h3 class="text-xl lg:text-2xl font-semibold">{title}</h3>
    <p class="text-sm text-gray-600">{subtitle}</p>
    <p class="text-xs text-gray-500 mt-1">{description}</p>

    <div class="flex flex-wrap gap-8">
      <div class="mt-3">
      <p class="font-semibold text-sm">{labels[language].tech}</p>
      <div class="flex flex-wrap gap-2 mt-1">
        {tags.map((tag: string) => (
          <img src={`/icons/${tag}.svg`} alt={tag} class="w-8 h-8 mr-1" />
        ))}
      </div>
    </div>

    <div class="mt-3">
      <p class="font-semibold text-sm">{labels[language].links}</p>
      <div class="flex gap-3 mt-2">
        {repo && (
          <a href={repo} target="_blank" class="text-blue-600 hover:underline">
            <Github />
          </a>
        )}
        {youtube && (
          <a href={youtube} target="_blank" class="text-blue-600 hover:underline">
            <Youtube />
          </a>
        )}
        {link && (
          <a href={link} target="_blank" class="text-blue-600 hover:underline">
            <Eye />
          </a>
        )}
      </div>
    </div>
    </div>
  </div>
</div>
